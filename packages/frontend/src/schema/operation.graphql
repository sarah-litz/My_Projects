# Local

query loginToken {
  token @client
}

# User

mutation changeEmail($email: String!, $newEmail: String!) {
  changeEmail(email: $email, newEmail: $newEmail)
}

mutation changePassword($password: String!) {
  changePassword(password: $password)
}

mutation deleteAccount {
  deleteAccount
}

mutation login(
  $email: String!
  $password: String! # ,$rememberMe: Boolean
) {
  loginUser(email: $email, password: $password)
  # login(email: $email, password: $password, rememberMe: $rememberMe)
}

mutation register(
  $firstname: String!
  $lastname: String!
  $email: String!
  $password: String!
) {
  addUser(
    firstname: $firstname
    lastname: $lastname
    email: $email
    password: $password
  )
}

fragment SleepDataFields on SleepDatum {
  id
  totalHours
  didDream
  anxiety
  caffeine
  melatonin
  sleepQuality
  date
}

query getSleepData {
  sleepData {
    ...SleepDataFields
  }
}

mutation createSleepData(
  $totalHours: Float
  $didDream: Boolean
  $anxiety: Float
  $sleepQuality: Float
  $caffeine: Float
  $melatonin: Float
  $date: DateTime!
) {
  createSleepData(
    options: {
      totalHours: $totalHours
      didDream: $didDream
      anxiety: $anxiety
      sleepQuality: $sleepQuality
      caffeine: $caffeine
      melatonin: $melatonin
      date: $date
    }
  ) {
    ...SleepDataFields
  }
}

query meEmail {
  me {
    email
  }
}

# mutation editSleepData(
#   $totalHours: Float
#   $didDream: Boolean
#   $anxiety: Float
#   $sleepQuality: Boolean
#   $caffeine: Float
#   $date: DateTime!
# ) {
#   editSleepData(
#     options: {
#       totalHours: $totalHours
#       didDream: $didDream
#       anxiety: $anxiety
#       sleepQuality: $sleepQuality
#       caffeine: $caffeine
#       date: $date
#     }
#   ) {
#     ...SleepDataFields
#   }
# }
